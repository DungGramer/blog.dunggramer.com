@use 'sass:math';

@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-right: math.ceil(($gutter * .5));
  padding-left: math.ceil(($gutter * .5));

  @include clearfix;
}


@mixin make-row($gutter: $grid-gutter-width) {
  --gutter-x: $gutter;
  --gutter-y: 0;

  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--gutter-y) * -1);

  @include margin-horizontal(calc(var(--gutter-x) / -2));
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  margin-top: var(--gutter-y);

  @include padding-horizontal(calc(var(--gutter-x) / 2));
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0  auto;
  width: math.percentage(calc($size / $columns));
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: calc($size / $columns);

  margin-left: if($num == 0, 0, math.percentage($num));
}


/**
 * Row columns
 * Specify on a parent element(e.g., .row) to force immediate children into NN
   number of columns. Supports wrapping to new lines, but does not do a Masonry
   style grid.
 */

@mixin row-cols($count) {
  > * {
    flex: 0 0 auto;
    width: math.percentage(calc(100 / $count));
  }
}


@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  @each $name, $breakpoint in $breakpoints {
    @include query-min($breakpoint) {
      /**
       * Provide basic `.col-{bp}` classes for equal-width flexbox columns
       * Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
       */

      .col-#{name} {
        flex: 1 0 0%;
      }

      .row-cols-#{name}-auto > * {
        @include make-col-auto();
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{name}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col-#{name}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col-#{name}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($columns - 1) {
          // Avoid emitting useless .offset-0
          @if not ($name == '' and $i == 0) {
            .offset-#{infix}-#{i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }

      /** Gutters
       * Make use of '.g-*', '.gx-*', '.gy-*' utilities to change spacing between the columns.
       */

      @each $key, $value in $gutters {
        .g-#{$name}-#{$key},
        .gx-#{$name}-#{key} {
          --gutter-x: #{$value};
        }

        .g-#{$name}-#{$key},
        .gy-#{$name}-#{key} {
          --gutter-y: #{$value};
        }
      }
    }
  }
}

